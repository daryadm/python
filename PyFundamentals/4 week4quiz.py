print "1lll1l1l1l1ll1l111ll1l1ll1l1ll1ll111ll1ll1ll1l1ll1ll1ll1ll1lll1l1l1l1l1l1l1l1l1l1l1l1ll1lll1l111ll1l1l1l1l1".count("l")
print "1lll1l1l1l1ll1l111ll1l1ll1l1ll1ll111ll1ll1ll1l1ll1ll1ll1ll1lll1l1l1l1l1l1l1l1l1l1l1l1ll1lll1l111ll1l1l1l1l1".count("1")
print len("1lll1l1l1l1ll1l111ll1l1ll1l1ll1ll111ll1ll1ll1l1ll1ll1ll1ll1lll1l1l1l1l1l1l1l1l1l1l1l1ll1lll1l111ll1l1l1l1l1")


import simplegui



# Draw handler
def draw(canvas):
  canvas.draw_circle([90, 200], 20, 10,"White")
  canvas.draw_circle([210, 200], 20, 10,"White")
  canvas.draw_line([50,180],[250,180], 40, "Red")
  canvas.draw_line([55,170],[90,120], 5, "Red")
  canvas.draw_line([90,120],[130,120], 5, "Red")
  canvas.draw_line([180,108],[180,160], 140, "Red")


        #Create frame and assign callbacks to event handlers
frame = simplegui.create_frame("What's on the screen?", 300, 300)
frame.set_draw_handler(draw)
        #frame.add_button("Increase radius", increase_radius)
        #frame.add_button("Decrease radius", decrease_radius)
frame.start()

---------------------------------------------------------------------------
# Mystery computation in Python
# Takes input n and computes output named result

import simplegui

# global state

result = 1
iteration = 0

# helper functions

def init(start):
    """Initializes n."""
    global n
    n = start
    print "Input is", n

# timer callback

def update():

    global n, iteration, result
    iteration += 1
    if n == 1:
        timer.stop()

    elif n % 2 == 0:
        n = n / 2
        print n
        update()
    else:
        n = n *3 + 1
        print n
        update()



# register event handlers

timer = simplegui.create_timer(1, update)

# start program

init(217)
timer.start()

---------------------------------------------------------------------------
# animation of explosion using 2D sprite sheet

import simplegui

# load 81 frame sprite sheer for explosion - image generated by phaedy explosion generator, source is hasgraphics.com
EXPLOSION_CENTER = [50, 50]
EXPLOSION_SIZE = [100, 100]
EXPLOSION_DIM = [9, 9]
explosion_image = simplegui.load_image("http://commondatastorage.googleapis.com/codeskulptor-assets/explosion.hasgraphics.png")

# create timer that iterates current_sprite_center through sprite
time = 0

# define draw handler
def draw(canvas):
    global time
    explosion_index = [time % EXPLOSION_DIM[0], (time // EXPLOSION_DIM[0]) % EXPLOSION_DIM[1]]
    canvas.draw_image(explosion_image,
                    [EXPLOSION_CENTER[0] + explosion_index[0] * EXPLOSION_SIZE[0],
                     EXPLOSION_CENTER[1] + explosion_index[1] * EXPLOSION_SIZE[1]],
                     EXPLOSION_SIZE, EXPLOSION_CENTER, EXPLOSION_SIZE)
    time += 1


# create frame and size frame based on 100x100 pixel sprite
f = simplegui.create_frame("Asteroid sprite", EXPLOSION_SIZE[0], EXPLOSION_SIZE[1])

# set draw handler and canvas background using custom HTML color
f.set_draw_handler(draw)
f.set_canvas_background("Blue")

# start animation
f.start()
